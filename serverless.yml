service: minesweeper-api

frameworkVersion: '2'
useDotenv: true

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-layers

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: us-west-2
  stackName: MinesweeperApi-${self:custom.stageCapitalized}
  apiName: MinesweeperApi-${self:custom.stageCapitalized}
  lambdaHashingVersion: 20201221
  deploymentBucket:
    name: serverless-deployment-repository
    maxPreviousDeploymentArtifacts: 10
  deploymentPrefix: minesweeper
  timeout: 29
  memorySize: 256
  httpApi:
    cors:
      allowedOrigins: 
        - https://${self:custom.domain}
        - http://localhost
      allowedMethods:
        - OPTIONS
        - GET
        - POST
        - PUT
        - PATCH
        - HEAD
        - DELETE
      allowHeaders:
        - Content-Type
        - X-Amz-Date
        - Authorization
        - X-Api-Key
        - X-Amz-Security-Token
        - X-Amz-User-Agent
      allowCredentials: false
      axAge: 3600
  environment:
    STAGE: ${self:provider.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - ses:SendEmail
       - ses:SendRawEmail
       - ses:SendTemplatedEmail
      Resource: "*"

custom:
  serverless-offline:
    httpPort: ${opt:port, '4000'}
  # customDomain:
  #   http:
  #     domainName: api.mine-sweeper.org
  #     stage: ${self:provider.stage}
  #     createRoute53Record: true
  #     endpointType: 'regional'
  webpack:
    webpackConfig: webpack.config.js
    includeModules: false
    excludeFiles: src/**/*.spec.ts
  serverless-layers:
    dependenciesPath: ./package.json
  stages:
    dev: Dev
    stage: Stage
    prod: Prod
  stageCapitalized: ${self:custom.stages.${self:provider.stage}}
  domainPrefix:
    dev: dev-
    stage: stage-
  domain: ${self:custom.domainPrefix.${self:provider.stage}}api.mine-sweeper.org

package:
  individually: false
  exclude:
    - ./node_modules/**
    - node_modules/**
  include:
    - src/**
    - package.json
  excludeDevDependencies: true

functions:
  applications:
    handler: src/handler.expressHandler
    events:
      - httpApi:
          path: /{proxy+}
          method: '*'

resources:
  Resources:
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Comment: Minesweeper - Api - ${self:custom.stageCapitalized}
          Enabled: true
          DefaultCacheBehavior:
            TargetOriginId: HttpApi
            ViewerProtocolPolicy: 'redirect-to-https'
            DefaultTTL: 30
            AllowedMethods:
              - HEAD
              - GET
              - POST
              - OPTIONS
              - POST
              - PUT
              - DELETE
              - PATCH
            ForwardedValues:
              QueryString: false
          Origins:
            - Id: HttpApi
              DomainName:
                Fn::Join:
                  - "."
                  - - Ref: HttpApi
                    - execute-api.us-west-2.amazonaws.com
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
          Aliases:
            - ${self:custom.domain}
          ViewerCertificate:
            AcmCertificateArn: "arn:aws:acm:us-east-1:204142071523:certificate/f21d20d6-8307-4883-96c5-eed8ac3f57ac"
            SslSupportMethod: sni-only
          Logging:
            Bucket: logs-cloudfront-sadkjhwe9.s3.amazonaws.com
            Prefix: Minesweeper/Api/${self:custom.stageCapitalized}
    Route53Record:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneName: mine-sweeper.org.
        Name: ${self:custom.domain}.
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: !GetAtt CloudFrontDistribution.DomainName
